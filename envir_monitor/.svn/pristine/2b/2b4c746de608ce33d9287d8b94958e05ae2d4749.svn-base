<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mwm.env.mybatis.dao.IndexLibraryInfoMapper" >
  <resultMap id="BaseResultMap" type="com.mwm.env.mybatis.modal.IndexLibraryInfo" >
    <id column="IndexLibId" property="indexlibid" jdbcType="INTEGER" />
    <result column="ProvideId" property="provideid" jdbcType="INTEGER" />
    <result column="IndexLibName" property="indexlibname" jdbcType="VARCHAR" />
    <result column="Createdate" property="createdate" jdbcType="BIGINT" />
    <result column="State" property="state" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.mwm.env.mybatis.modal.IndexLibraryInfo" extends="BaseResultMap" >
    <result column="IndexLibDes" property="indexlibdes" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    IndexLibId, ProvideId, IndexLibName, Createdate, State
  </sql>
  <sql id="Blob_Column_List" >
    IndexLibDes
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.mwm.env.mybatis.modal.IndexLibraryInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from IndexLibraryInfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mwm.env.mybatis.modal.IndexLibraryInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from IndexLibraryInfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from IndexLibraryInfo
    where IndexLibId = #{indexlibid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from IndexLibraryInfo
    where IndexLibId = #{indexlibid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mwm.env.mybatis.modal.IndexLibraryInfoExample" >
    delete from IndexLibraryInfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mwm.env.mybatis.modal.IndexLibraryInfo" >
    <selectKey resultType="java.lang.Integer" keyProperty="indexlibid" order="AFTER" >
      select last_insert_id()
    </selectKey>
    insert into IndexLibraryInfo (ProvideId, IndexLibName, Createdate, 
      State, IndexLibDes)
    values (#{provideid,jdbcType=INTEGER}, #{indexlibname,jdbcType=VARCHAR}, #{createdate,jdbcType=BIGINT}, 
      #{state,jdbcType=VARCHAR}, #{indexlibdes,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.mwm.env.mybatis.modal.IndexLibraryInfo" >
    <selectKey resultType="java.lang.Integer" keyProperty="indexlibid" order="AFTER" >
      select last_insert_id()
    </selectKey>
    insert into IndexLibraryInfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="provideid != null" >
        ProvideId,
      </if>
      <if test="indexlibname != null" >
        IndexLibName,
      </if>
      <if test="createdate != null" >
        Createdate,
      </if>
      <if test="state != null" >
        State,
      </if>
      <if test="indexlibdes != null" >
        IndexLibDes,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="provideid != null" >
        #{provideid,jdbcType=INTEGER},
      </if>
      <if test="indexlibname != null" >
        #{indexlibname,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=BIGINT},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="indexlibdes != null" >
        #{indexlibdes,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mwm.env.mybatis.modal.IndexLibraryInfoExample" resultType="java.lang.Integer" >
    select count(*) from IndexLibraryInfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update IndexLibraryInfo
    <set >
      <if test="record.indexlibid != null" >
        IndexLibId = #{record.indexlibid,jdbcType=INTEGER},
      </if>
      <if test="record.provideid != null" >
        ProvideId = #{record.provideid,jdbcType=INTEGER},
      </if>
      <if test="record.indexlibname != null" >
        IndexLibName = #{record.indexlibname,jdbcType=VARCHAR},
      </if>
      <if test="record.createdate != null" >
        Createdate = #{record.createdate,jdbcType=BIGINT},
      </if>
      <if test="record.state != null" >
        State = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.indexlibdes != null" >
        IndexLibDes = #{record.indexlibdes,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update IndexLibraryInfo
    set IndexLibId = #{record.indexlibid,jdbcType=INTEGER},
      ProvideId = #{record.provideid,jdbcType=INTEGER},
      IndexLibName = #{record.indexlibname,jdbcType=VARCHAR},
      Createdate = #{record.createdate,jdbcType=BIGINT},
      State = #{record.state,jdbcType=VARCHAR},
      IndexLibDes = #{record.indexlibdes,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update IndexLibraryInfo
    set IndexLibId = #{record.indexlibid,jdbcType=INTEGER},
      ProvideId = #{record.provideid,jdbcType=INTEGER},
      IndexLibName = #{record.indexlibname,jdbcType=VARCHAR},
      Createdate = #{record.createdate,jdbcType=BIGINT},
      State = #{record.state,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mwm.env.mybatis.modal.IndexLibraryInfo" >
    update IndexLibraryInfo
    <set >
      <if test="provideid != null" >
        ProvideId = #{provideid,jdbcType=INTEGER},
      </if>
      <if test="indexlibname != null" >
        IndexLibName = #{indexlibname,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        Createdate = #{createdate,jdbcType=BIGINT},
      </if>
      <if test="state != null" >
        State = #{state,jdbcType=VARCHAR},
      </if>
      <if test="indexlibdes != null" >
        IndexLibDes = #{indexlibdes,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where IndexLibId = #{indexlibid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.mwm.env.mybatis.modal.IndexLibraryInfo" >
    update IndexLibraryInfo
    set ProvideId = #{provideid,jdbcType=INTEGER},
      IndexLibName = #{indexlibname,jdbcType=VARCHAR},
      Createdate = #{createdate,jdbcType=BIGINT},
      State = #{state,jdbcType=VARCHAR},
      IndexLibDes = #{indexlibdes,jdbcType=LONGVARCHAR}
    where IndexLibId = #{indexlibid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mwm.env.mybatis.modal.IndexLibraryInfo" >
    update IndexLibraryInfo
    set ProvideId = #{provideid,jdbcType=INTEGER},
      IndexLibName = #{indexlibname,jdbcType=VARCHAR},
      Createdate = #{createdate,jdbcType=BIGINT},
      State = #{state,jdbcType=VARCHAR}
    where IndexLibId = #{indexlibid,jdbcType=INTEGER}
  </update>
</mapper>