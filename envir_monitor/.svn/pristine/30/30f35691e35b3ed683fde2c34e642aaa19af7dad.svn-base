<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mwm.env.mybatis.dao.ReportInfoMapper" >
  <resultMap id="BaseResultMap" type="com.mwm.env.mybatis.modal.ReportInfo" >
    <id column="ReportId" property="reportid" jdbcType="INTEGER" />
    <result column="ProvideId" property="provideid" jdbcType="INTEGER" />
    <result column="ReportName" property="reportname" jdbcType="VARCHAR" />
    <result column="DeleteFlag" property="deleteflag" jdbcType="CHAR" />
    <result column="Createdate" property="createdate" jdbcType="BIGINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.mwm.env.mybatis.modal.ReportInfo" extends="BaseResultMap" >
    <result column="ReportUrl" property="reporturl" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ReportId, ProvideId, ReportName, DeleteFlag, Createdate
  </sql>
  <sql id="Blob_Column_List" >
    ReportUrl
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.mwm.env.mybatis.modal.ReportInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ReportInfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mwm.env.mybatis.modal.ReportInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ReportInfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ReportInfo
    where ReportId = #{reportid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ReportInfo
    where ReportId = #{reportid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mwm.env.mybatis.modal.ReportInfoExample" >
    delete from ReportInfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mwm.env.mybatis.modal.ReportInfo" >
    <selectKey resultType="java.lang.Integer" keyProperty="reportid" order="AFTER" >
      select last_insert_id()
    </selectKey>
    insert into ReportInfo (ProvideId, ReportName, DeleteFlag, 
      Createdate, ReportUrl)
    values (#{provideid,jdbcType=INTEGER}, #{reportname,jdbcType=VARCHAR}, #{deleteflag,jdbcType=CHAR}, 
      #{createdate,jdbcType=BIGINT}, #{reporturl,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.mwm.env.mybatis.modal.ReportInfo" >
    <selectKey resultType="java.lang.Integer" keyProperty="reportid" order="AFTER" >
      select last_insert_id()
    </selectKey>
    insert into ReportInfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="provideid != null" >
        ProvideId,
      </if>
      <if test="reportname != null" >
        ReportName,
      </if>
      <if test="deleteflag != null" >
        DeleteFlag,
      </if>
      <if test="createdate != null" >
        Createdate,
      </if>
      <if test="reporturl != null" >
        ReportUrl,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="provideid != null" >
        #{provideid,jdbcType=INTEGER},
      </if>
      <if test="reportname != null" >
        #{reportname,jdbcType=VARCHAR},
      </if>
      <if test="deleteflag != null" >
        #{deleteflag,jdbcType=CHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=BIGINT},
      </if>
      <if test="reporturl != null" >
        #{reporturl,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mwm.env.mybatis.modal.ReportInfoExample" resultType="java.lang.Integer" >
    select count(*) from ReportInfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ReportInfo
    <set >
      <if test="record.reportid != null" >
        ReportId = #{record.reportid,jdbcType=INTEGER},
      </if>
      <if test="record.provideid != null" >
        ProvideId = #{record.provideid,jdbcType=INTEGER},
      </if>
      <if test="record.reportname != null" >
        ReportName = #{record.reportname,jdbcType=VARCHAR},
      </if>
      <if test="record.deleteflag != null" >
        DeleteFlag = #{record.deleteflag,jdbcType=CHAR},
      </if>
      <if test="record.createdate != null" >
        Createdate = #{record.createdate,jdbcType=BIGINT},
      </if>
      <if test="record.reporturl != null" >
        ReportUrl = #{record.reporturl,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update ReportInfo
    set ReportId = #{record.reportid,jdbcType=INTEGER},
      ProvideId = #{record.provideid,jdbcType=INTEGER},
      ReportName = #{record.reportname,jdbcType=VARCHAR},
      DeleteFlag = #{record.deleteflag,jdbcType=CHAR},
      Createdate = #{record.createdate,jdbcType=BIGINT},
      ReportUrl = #{record.reporturl,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ReportInfo
    set ReportId = #{record.reportid,jdbcType=INTEGER},
      ProvideId = #{record.provideid,jdbcType=INTEGER},
      ReportName = #{record.reportname,jdbcType=VARCHAR},
      DeleteFlag = #{record.deleteflag,jdbcType=CHAR},
      Createdate = #{record.createdate,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mwm.env.mybatis.modal.ReportInfo" >
    update ReportInfo
    <set >
      <if test="provideid != null" >
        ProvideId = #{provideid,jdbcType=INTEGER},
      </if>
      <if test="reportname != null" >
        ReportName = #{reportname,jdbcType=VARCHAR},
      </if>
      <if test="deleteflag != null" >
        DeleteFlag = #{deleteflag,jdbcType=CHAR},
      </if>
      <if test="createdate != null" >
        Createdate = #{createdate,jdbcType=BIGINT},
      </if>
      <if test="reporturl != null" >
        ReportUrl = #{reporturl,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ReportId = #{reportid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.mwm.env.mybatis.modal.ReportInfo" >
    update ReportInfo
    set ProvideId = #{provideid,jdbcType=INTEGER},
      ReportName = #{reportname,jdbcType=VARCHAR},
      DeleteFlag = #{deleteflag,jdbcType=CHAR},
      Createdate = #{createdate,jdbcType=BIGINT},
      ReportUrl = #{reporturl,jdbcType=LONGVARCHAR}
    where ReportId = #{reportid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mwm.env.mybatis.modal.ReportInfo" >
    update ReportInfo
    set ProvideId = #{provideid,jdbcType=INTEGER},
      ReportName = #{reportname,jdbcType=VARCHAR},
      DeleteFlag = #{deleteflag,jdbcType=CHAR},
      Createdate = #{createdate,jdbcType=BIGINT}
    where ReportId = #{reportid,jdbcType=INTEGER}
  </update>
</mapper>